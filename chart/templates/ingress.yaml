{{- if .Values.ingress.enabled -}}
{{- $fullName := include "flaskselfdemo.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if eq .Values.ingress.supplier "tke" -}}
apiVersion: extensions/v1beta1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "flaskselfdemo.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.http-rules: '[
    {{- range .Values.ingress.hosts }} 
    {{- range .paths }} 
    {"path":{{ .path | quote }},"backend":{"serviceName":{{ $fullName | quote }},"servicePort":{{ $svcPort | quote }}}}
    {{- end }}
    {{- end }}
    ]'
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
            pathType: ImplementationSpecific
          {{- end }}
    {{- end }}
  {{- end }}
